#Problem Statement:
- Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, 
  with the colors in the order red, white, and blue.
- We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively.
- You must solve this problem without using the library's sort function.

#Solution:
Dutch-National Flag Algo:
- The Dutch National Flag algorithm, also known as 3-way partitioning, is an algorithm for sorting an array containing three distinct values. 
- The algorithm was designed to solve the problem of sorting an array containing only 0s, 1s, and 2s, which is similar to the problem in the given question.
- The algorithm works by maintaining three pointers: low, mid, and high. The low pointer points to the beginning of the array, 
  the high pointer points to the end of the array, and the mid pointer starts at the beginning of the array and moves through it.

void sortColors(vector<int>& nums) 
{
    int low = 0, mid = 0, high = nums.size()-1;
    while(mid <= high)
    {
        if(nums[mid] == 0){
            swap(nums[low], nums[mid]);
            low++;
            mid++;
        }
        else if(nums[mid] == 1){
            mid++;
        }
        else{
            swap(nums[mid], nums[high]);
            high--;
            }
    }
}

Time complexity: O(n)
Space complexity: O(1)
