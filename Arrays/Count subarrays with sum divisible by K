#Problem Statement:
- Given an integer array nums and an integer k, return the number of non-empty subarrays that have a sum divisible by k.
- A subarray is a contiguous part of an array.

#Solution:

Optimzed Solution - PrefixSum + Hash Set
int subarraysDivByK(vector<int>& nums, int k) 
{
    int sum = 0, count = 0;
    unordered_map<int,int>mp;
    mp[0] = 1;
    for(int i = 0; i < nums.size(); i++)
    {
        sum += nums[i];
        int rem = sum % k;
        if(rem < 0)rem += k;
        count += mp[rem];
        mp[rem]++;
    }
    return count;
}
Time - O(N), Space - O(N)
