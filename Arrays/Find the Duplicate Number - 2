#Problem Statement:
- Given an integer array nums of length n where all the integers of nums are in the range [1, n] and 
  each integer appears once or twice, return an array of all the integers that appears twice.
- You must write an algorithm that runs in O(n) time and uses only constant extra space.

#Solution:
- Same as Find the duplicate Number - 2, but here we need to return all elements that are repeating twice.

 vector<int> findDuplicates(vector<int>& nums) 
{
    vector<int>v;
    for(int i = 0; i < nums.size(); i++)
    {
        int index = abs(nums[i]);
        if(nums[index-1] < 0)
        {
            v.push_back(index);
        }
        nums[index-1] *= -1;
    }
    return v;
}
